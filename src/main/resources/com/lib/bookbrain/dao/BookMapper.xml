<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
      "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lib.bookbrain.dao.BookMapper">
   <resultMap id="BaseResultMap" type="com.lib.bookbrain.model.entity.Book">
      <id column="book_id" jdbcType="INTEGER" property="bookId"/>
      <result column="book_damage_level" jdbcType="TINYINT" property="bookDamageLevel"/>
      <result column="borrowable" jdbcType="BIT" property="borrowable"/>
      <result column="created_by" jdbcType="INTEGER" property="createdBy"/>
      <result column="creation_time" jdbcType="TIMESTAMP" property="creationTime"/>
      <result column="updated_by" jdbcType="INTEGER" property="updatedBy"/>
      <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime"/>
      <result column="revision" jdbcType="INTEGER" property="revision"/>
      <association column="{id=book_info_id}" property="bookInfo" javaType="com.lib.bookbrain.model.entity.BookInfo"
                   select="com.lib.bookbrain.dao.BookInfoMapper.getById"/>
   </resultMap>
   <insert id="insert" useGeneratedKeys="true" keyProperty="entity.bookId" keyColumn="book_id"
           parameterType="com.lib.bookbrain.model.Payload">
      insert into book (book_damage_level, borrowable, book_info_id, created_by, creation_time, updated_by,
                        last_update_time, revision)
      VALUES (#{entity.bookDamageLevel}, #{entity.borrowable}, #{entity.bookInfo.bookInfoId}, #{entity.createBy},
              now(),
              #{entity.updateBy}, now(), #{entity.revision})
   </insert>
   <update id="update" parameterType="com.lib.bookbrain.model.Payload">
      update book b
      <set>
         <if test="entity != null">
            <if test="entity.bookDamageLevel != null">
               b.`book_damage_level` = #{entity.bookDamageLevel},
            </if>
            <if test="entity.borrowable != null">
               b.`borrowable` = #{entity.borrowable},
            </if>
            <if test="entity.bookInfo.bookInfoId != null">
               b.`book_info_id` = #{entity.bookInfo.bookInfoId},
            </if>
            <if test="entity.updateBy != null">
               b.`updated_by` = #{entity.updateBy},
            </if>
         </if>
         <if test="1 == 1">
            b.`last_update_time` = now(),
            b.`revision` = (1 + b.`revision`) % 2147483647,
         </if>
      </set>
      where b.`book_id` = #{id}
      and b.`revision` = #{revision}
   </update>
   <delete id="delete" parameterType="com.lib.bookbrain.model.Payload">
      delete
      from book
      where book_id = #{id}
   </delete>
   <select id="getBy" resultMap="BaseResultMap">
      select b.`book_id`,
      b.`book_damage_level`,
      b.`borrowable`,
      b.`book_info_id`,
      b.`created_by`,
      b.`creation_time`,
      b.`updated_by`,
      b.`last_update_time`,
      b.`revision`
      from book b
      <where>
      </where>
   </select>
   <select id="getById" resultMap="BaseResultMap" parameterType="com.lib.bookbrain.model.Payload">
      select b.`book_id`,
             b.`book_damage_level`,
             b.`borrowable`,
             b.`book_info_id`,
             b.`created_by`,
             b.`creation_time`,
             b.`updated_by`,
             b.`last_update_time`,
             b.`revision`
      from book b
      where b.`book_id` = #{id}
   </select>
   <select id="getByUpdate" resultMap="BaseResultMap">
      select *
      from book b
      where b.`book_id` = #{id}
   </select>
</mapper>