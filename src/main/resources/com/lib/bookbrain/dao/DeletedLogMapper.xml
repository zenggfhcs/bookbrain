<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
      "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lib.bookbrain.dao.DeletedLogMapper">
   <resultMap id="BaseResultMap" type="com.lib.bookbrain.model.log.DeletedLog">
      <id property="logId" column="log_id" jdbcType="BIGINT"/>
      <result property="dataClass" column="data_class" jdbcType="VARCHAR"/>
      <result property="dataId" column="data_id" jdbcType="INTEGER"/>
      <result property="data" column="data" jdbcType="VARCHAR"/>
      <result property="elapsedTime" column="elapse_time" jdbcType="BIGINT"/>
      <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
      <result property="createBy" column="create_by" jdbcType="INTEGER"/>

   </resultMap>
   <insert id="create" parameterType="com.lib.bookbrain.model.Payload" keyProperty="entity.logId" keyColumn="log_id"
           useGeneratedKeys="true">
      insert into delete_log(data_class, data_id, data, elapsed_time, create_time, create_by)
      values (#{dataClass}, #{dataId}, #{data}, 0, NOW(), #{createBy})
   </insert>
   <update id="update" parameterType="com.lib.bookbrain.model.Payload">
      update delete_log dl
      <set>
         <if test="entity.data != null and entity.data != ''">
            dl.`data` = #{entity.data},
         </if>
         <if test="entity.elapsedTime != null">
            dl.`elapsed_time` = #{entity.elapsedTime},
         </if>
      </set>
      where dl.`log_id` = #{logId}
   </update>
   <delete id="delete">
   </delete>
   <select id="getBy" resultType="com.lib.bookbrain.model.log.DeletedLog">
   </select>
   <select id="getById" resultType="com.lib.bookbrain.model.log.DeletedLog">
   </select>

   <select id="getByUpdate" resultMap="BaseResultMap">
   </select>
</mapper>