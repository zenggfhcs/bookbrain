<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lib.bookbrain.dao.PublisherMapper">
	<resultMap id="BaseResultMap" type="com.lib.bookbrain.model.entity.Publisher">
		<id property="id" column="id" jdbcType="INTEGER"/>
		<result property="name" column="name" jdbcType="INTEGER"/>
		<result property="place" column="place" jdbcType="VARCHAR"/>
		<result property="remark" column="remark" jdbcType="VARCHAR"/>
		<result property="createdBy" column="created_by" jdbcType="INTEGER"/>
		<result property="creationTime" column="creation_time" jdbcType="TIMESTAMP"/>
		<result property="updatedBy" column="updated_by" jdbcType="INTEGER"/>
		<result property="lastUpdatedTime" column="last_updated_time" jdbcType="TIMESTAMP"/>
		<result property="revision" column="revision" jdbcType="INTEGER"/>
	</resultMap>
	<select id="list" resultMap="BaseResultMap">
		select *
		from publisher;
	</select>
	<select id="count">
		select count(*)
		from publisher;
	</select>
	<insert id="insert" parameterType="com.lib.bookbrain.model.exchange.Payload" useGeneratedKeys="true"
	        keyColumn="entity.id">
		insert into publisher(`name`, `place`, `remark`, `created_by`, `creation_time`, `updated_by`, `last_updated_time`,
		                      `revision`)
		values (#{name}, #{place}, #{remark}, #{createdBy}, NOW(), #{updatedBy}, NOW(), 0)
	</insert>
	<update id="update" parameterType="com.lib.bookbrain.model.exchange.Payload">
		update publisher p
		<set>
			<if test="entity != null">
				<if test="entity.name != null and entity.name != ''">
					p.`name` = #{entity.name},
				</if>
				<if test="entity.place != null and entity.place != ''">
					p.`place` = #{entity.place},
				</if>
				<if test="entity.remark != null">
					p.`remark` = #{entity.remark},
				</if>
				<if test="entity.updatedBy != null">
					p.`updated_by` = #{entity.updatedBy},
				</if>
			</if>
			<if test="1 == 1">
				p.`last_updated_time` = NOW(),
				p.`revision`          = (p.`revision` + 1) % 2147483647
			</if>
		</set>
		where p.`id` = #{id}
		  and p.`revision` = #{entity.revision};
	</update>
	<delete id="delete">
		delete
		from publisher
		where `id` = #{id}
	</delete>
	<select id="getById" resultMap="BaseResultMap">
		select p.`id`,
		       p.`name`,
		       p.`place`,
		       p.`remark`,
		       p.`created_by`,
		       p.`creation_time`,
		       p.`updated_by`,
		       p.`last_updated_time`,
		       p.`revision`
		from publisher p
		where p.`id` = #{id}
	</select>

	<select id="getToUpdate" resultMap="BaseResultMap" parameterType="com.lib.bookbrain.model.exchange.Payload">
		select
		<trim suffixOverrides=",">
			<if test="entity != null">
				<if test="entity.name != null and entity.name != ''">
					p.`name`,
				</if>
				<if test="entity.place != null and entity.place != ''">
					p.`place`,
				</if>
				<if test="entity.remark != null">
					p.`remark`,
				</if>
			</if>
		</trim>
		from publisher p
		where p.`id` = #{id}
	</select>
	<select id="getCountByName" resultType="int">
		select count(*)
		from publisher p
		where p.`name` = #{name}
	</select>
</mapper>